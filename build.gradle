plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.cricket'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
	implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
		exclude group : "org.hibernate",   module: "hibernate-core"
	}
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.3.3.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.3.3.RELEASE'


	implementation 'com.opencsv:opencsv:5.1'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

task copyToLib(type: Copy) {
	into "$buildDir/libs"
	from(configurations.compile)
}

stage.dependsOn(copyToLib)

gradle.taskGraph.whenReady {
	taskGraph ->
		if (taskGraph.hasTask(stage)) {
			test.enabled = false
		}
}

test {
	useJUnitPlatform()
}
